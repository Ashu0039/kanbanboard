{"version":3,"sources":["components/Header.jsx","components/Project.jsx","components/Stage.jsx","components/KanbanBoard.jsx","initialData.js","components/AddProject.jsx","components/AddStage.jsx","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","div","_templateObject","TitleContainer","_templateObject2","Title","_templateObject3","CountStatus","_templateObject4","AddProjectButton","button","_templateObject5","AddStageButton","_templateObject6","Header","_ref","openAddProject","openAddStage","noOfProjects","react_default","a","createElement","concat","onClick","defaultProps","ProjectContainer","Project_templateObject","props","isDragging","ProjectTitle","Project_templateObject2","ProjectDescription","Project_templateObject3","Project","project","index","title","description","react_beautiful_dnd_esm","draggableId","id","provided","snapshot","Object","assign","draggableProps","dragHandleProps","ref","innerRef","StageContainer","Stage_templateObject","ProjectList","Stage_templateObject2","isDraggingOver","StageName","h3","Stage_templateObject3","Stage","stage","projects","droppableId","droppableProps","map","components_Project","key","placeholder","KanbanBoardContainer","KanbanBoard_templateObject","KanbanBoard","onDragEnd","result","console","log","source","destination","data","_this","stages","sourceStage","destinationStage","projectsInSource","projectIds","projectsInDestination","afterRemovingDraggedProject","toConsumableArray","slice","addingDraggedProject","updatedSourceStage","objectSpread","updatedDestinationStage","updateStage","projectMoved","toastMessage","showToastMessage","reArrangeProjectsInSameStage","newProjectIds","Array","from","splice","updatedStage","this","stageOrder","stageId","projectsInStage","projectId","components_Stage","Component","initialData","planning","in-progress","testing","completed","project-1","project-2","project-3","project-4","AddProject","state","projectName","resetFields","setState","handleDescriptionChange","e","target","value","handleProjectNameChange","onSubmit","_this$state","onCancel","_this$state2","showAddProject","Dialog_default","open","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","type","fullWidth","onChange","DialogActions_default","Button_default","color","AddStage","stageName","handleStageNameChange","showAddStage","AppContainer","App_templateObject","randomNumber","Math","floor","random","App","showToast","addProject","addStage","newStage","updatedStages","addNewStage","newId","newStageId","copyStages","newStageOrder","closeAddStage","addNewProject","_ref2","projectDescription","newProjectId","newProject","copyProjects","planningStage","projectsInPlanning","addedNewProjectId","updatedPlanningStage","closeAddProject","message","hideToastMessage","keys","length","components_Header","components_KanbanBoard","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","components_AddProject","components_AddStage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38baa626.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst HeaderContainer = styled.div`\n  background: white;\n  width: 100%;\n  height: 120px;\n  padding: 24px;\n  display: flex;\n  align-items: center;\n  // justify-content: space-between;\n  box-sizing: border-box;\n`;\n\nconst TitleContainer = styled.div`\n\n`;\n\nconst Title = styled.div`\n  color: black;\n  font-size: 28px;\n  margin-bottom: 3px;\n`;\n\nconst CountStatus = styled.div`\n  color: darkgray;\n  font-size: 14px;\n`;\n\nconst AddProjectButton = styled.button`\n  height: 42px;\n  border-radius: 21px;\n  padding: 0 18px;\n  font-size: 18px;\n  background: orange;\n  color: white;\n  transition: background 0.2s, color 0.2s;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid orange;\n  margin-left: auto;\n  margin-right: 12px;\n\n  &:hover {\n    background: white;\n    color: orange;\n  }\n`;\n\nconst AddStageButton = styled.button`\n  height: 42px;\n  border-radius: 21px;\n  padding: 0 18px;\n  font-size: 18px;\n  background: purple;\n  color: white;\n  transition: background 0.2s, color 0.2s;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid purple;\n\n  &:hover {\n    background: white;\n    color: purple;\n  }\n`;\n\nconst Header = ({ openAddProject, openAddStage, noOfProjects }) => (\n  <HeaderContainer>\n    <TitleContainer>\n      <Title>Mission Control</Title>\n      <CountStatus>{ `${noOfProjects || 'No'} projects ongoing.` }</CountStatus>\n    </TitleContainer>\n    <AddProjectButton onClick={() => openAddProject()}>Add Project</AddProjectButton>\n    <AddStageButton onClick={() => openAddStage()}>Add Stage</AddStageButton>\n  </HeaderContainer>\n);\n\nHeader.propTypes = {\n  openAddProject: PropTypes.func,\n  openAddStage: PropTypes.func,\n  noOfProjects: PropTypes.number,\n};\n\nHeader.defaultProps = {\n  openAddProject: () => {},\n  openAddStage: () => {},\n  noOfProjects: 0,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst ProjectContainer = styled.div`\n  background: ${props => props.isDragging ? 'lightyellow' : 'white'};\n  transition: background 0.2s ease;\n  border: 1px solid lightgray;\n  border-radius: 4px;\n  padding: 6px;\n  margin-bottom: 6px;\n`;\n\nconst ProjectTitle = styled.div`\n  color: orange;\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 8px;\n`;\n\nconst ProjectDescription = styled.div`\n  font-size: 14px;\n  color: black;\n`;\n\nconst Project = ({ project, index }) => {\n  const { title, description } = project;\n\n  return (\n    <Draggable draggableId={project.id} index={index}>\n      {\n        (provided, snapshot) => (\n          <ProjectContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n              <ProjectTitle>{ title }</ProjectTitle>\n              <ProjectDescription>{ description }</ProjectDescription>\n          </ProjectContainer>\n        )\n      }\n\n    </Draggable>\n  );\n}\n\nProject.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default Project;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Droppable } from 'react-beautiful-dnd';\nimport Project from './Project';\n\nconst StageContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  border: 2px solid lightgray;\n  background: #dedede;\n  border-radius: 4px;\n  margin: 12px 6px;\n  width: auto;\n  min-width: 240px;\n\n  &:first-child {\n    margin-left: 12px;\n  }\n\n  &:last-child {\n    margin-right: 12px;\n  }\n`;\n\nconst ProjectList = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-height: 200px;\n  background: ${props => props.isDraggingOver ? 'lightblue' : 'inherit'};\n  transition: background 0.2s ease;\n  padding: 12px;\n`;\n\nconst StageName = styled.h3`\n  margin: 6px 0;\n  color: #020202;\n  padding: 0 12px;\n`;\n\nconst Stage = ({ stage, projects }) => (\n  <StageContainer>\n    <StageName>{ stage.title }</StageName>\n    <Droppable droppableId={stage.id}>\n      {\n        (provided, snapshot) => (\n          <ProjectList\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            isDraggingOver={snapshot.isDraggingOver}\n          >\n            {\n              projects.map((project, index) =>\n                <Project key={project.id} project={project} index={index} />)\n            }\n            { provided.placeholder }\n          </ProjectList>\n        )\n      }\n    </Droppable>\n  </StageContainer>\n);\n\nStage.propTypes = {\n  stage: PropTypes.shape({}).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nStage.defaultProps = {\n  projects: [],\n};\n\nexport default Stage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Stage from './Stage';\n\nconst KanbanBoardContainer = styled.div`\n  background: #f1f1f1;\n  flex: 1;\n  display: flex;\n  overflow-x: auto;\n  padding-bottom: 8px;\n`;\n\nclass KanbanBoard extends Component {\n  onDragEnd = (result) => {\n    console.log('result of drag end --> ', result);\n\n    const { source, destination, draggableId } = result;\n\n    // Dropped nowhere\n    if (!destination) return;\n\n    // Dropped in same place\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n    if (source.droppableId === destination.droppableId) {\n      this.reArrangeProjectsInSameStage(result);\n      return;\n    }\n\n    const { data } = this.props;\n    const { stages, projects } = data;\n    const sourceStage = stages[source.droppableId];\n    const destinationStage = stages[destination.droppableId];\n\n    const { projectIds: projectsInSource } = sourceStage;\n    const { projectIds: projectsInDestination } = destinationStage;\n\n    // Remove the dragged project from source projects and put in projects of destination stage\n    const afterRemovingDraggedProject = [...projectsInSource.slice(0, source.index), ...projectsInSource.slice(source.index + 1)];\n    const addingDraggedProject = [...projectsInDestination.slice(0, destination.index), draggableId, ...projectsInDestination.slice(destination.index)];\n\n    const updatedSourceStage = {\n      ...sourceStage,\n      projectIds: afterRemovingDraggedProject,\n    };\n\n    const updatedDestinationStage = {\n      ...destinationStage,\n      projectIds: addingDraggedProject,\n    };\n\n    this.props.updateStage(sourceStage.id, updatedSourceStage);\n    this.props.updateStage(destinationStage.id, updatedDestinationStage);\n\n    const projectMoved = projects[draggableId];\n\n    const toastMessage = `${projectMoved.title} moved from ${sourceStage.title} to ${destinationStage.title} stage!`;\n    this.props.showToastMessage(toastMessage);\n  }\n\n  reArrangeProjectsInSameStage = (result) => {\n    const { source, destination, draggableId } = result;\n\n    const { data } = this.props;\n    const { stages, projects } = data;\n\n    const sourceStage = stages[source.droppableId];\n    const newProjectIds = Array.from(sourceStage.projectIds);\n    newProjectIds.splice(source.index, 1);\n    newProjectIds.splice(destination.index, 0, draggableId);\n\n    const updatedStage = {\n      ...sourceStage,\n      projectIds: newProjectIds,\n    };\n\n    this.props.updateStage(sourceStage.id, updatedStage);\n\n    const projectMoved = projects[draggableId];\n\n    const toastMessage = `${projectMoved.title} repositioned in ${sourceStage.title} stage.`;\n    this.props.showToastMessage(toastMessage);\n  }\n\n  render() {\n    const { data } = this.props;\n    const { stageOrder, stages, projects } = data;\n\n    return (\n      <DragDropContext\n        onDragEnd={this.onDragEnd}\n      >\n        <KanbanBoardContainer>\n          {\n            stageOrder.map((stageId) => {\n              const stage = stages[stageId];\n              const projectsInStage = stage.projectIds.map(projectId => projects[projectId]);\n  \n              return <Stage key={stage.id} stage={stage} projects={projectsInStage} />\n            })\n          }\n        </KanbanBoardContainer>\n      </DragDropContext>\n    );\n  }\n}\n\nKanbanBoard.propTypes = {\n  stages: PropTypes.arrayOf(PropTypes.shape({})),\n  updateStage: PropTypes.func,\n  showToastMessage: PropTypes.func,\n};\n\nKanbanBoard.defaultProps = {\n  stages: [],\n  updateStage: () => {},\n  showToastMessage: () => {},\n};\n\nexport default KanbanBoard;","const initialData = {\n  stages: {\n    'planning': {\n      id: 'planning',\n      title: 'Planning',\n      projectIds: ['project-1', 'project-2'],\n    },\n    'in-progress': {\n      id: 'in-progress',\n      title: 'In Progress',\n      projectIds: ['project-3'],\n    },\n    'testing': {\n      id: 'testing',\n      title: 'Testing',\n      projectIds: ['project-4'],\n    },\n    'completed': {\n      id: 'completed',\n      title: 'Completed',\n      projectIds: [],\n    }\n  },\n  stageOrder: ['planning', 'in-progress', 'testing', 'completed'],\n  projects: {\n    'project-1': {\n      id: 'project-1',\n      title: 'Project 1',\n      description: 'Some description about Project 1',\n    },\n    'project-2': {\n      id: 'project-2',\n      title: 'Project 2',\n      description: 'This project is gonna be interesting',\n    },\n    'project-3': {\n      id: 'project-3',\n      title: 'Project 3',\n      description: 'This project might take some time',\n    },\n    'project-4': {\n      id: 'project-4',\n      title: 'Project 4',\n      description: 'Wooho! Million dollar idea!',\n    },\n  },\n}\n\nexport default initialData;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass AddProject extends Component {\n  state = {\n    projectName: '',\n    description: '',\n  }\n\n  resetFields = () => {\n    this.setState({\n      projectName: '',\n      description: '',\n    });\n  }\n\n  handleDescriptionChange = (e) => {\n    this.setState({ description: e.target.value });\n  }\n\n  handleProjectNameChange = (e) => {\n    this.setState({ projectName: e.target.value });\n  }\n\n  onSubmit = () => {\n    const { projectName, description } = this.state;\n    this.props.onSubmit({ projectName, description });\n    this.resetFields();\n  }\n\n  onCancel = () => {\n    this.resetFields();\n    this.props.onCancel();\n  }\n\n  render() {\n    const { projectName, description } = this.state;\n    const { showAddProject } = this.props;\n\n    return (\n      <Dialog\n        open={showAddProject}\n        onClose={this.onCancel}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add New Project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the name and description for the new project.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project Name\"\n            type=\"text\"\n            fullWidth\n            value={projectName}\n            onChange={this.handleProjectNameChange}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Description\"\n            type=\"text\"\n            fullWidth\n            value={description}\n            onChange={this.handleDescriptionChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.onCancel} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Add Project\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  showAddProject: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nAddProject.defaultProps = {\n  showAddProject: false,\n  onCancel: () => {},\n  onSubmit: () => {},\n};\n\nexport default AddProject;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass AddStage extends Component {\n  state = {\n    stageName: '',\n  }\n\n  resetFields = () => {\n    this.setState({\n      stageName: '',\n    });\n  }\n\n  handleStageNameChange = (e) => {\n    this.setState({ stageName: e.target.value });\n  }\n\n  onSubmit = () => {\n    const { stageName } = this.state;\n    this.props.onSubmit({ stageName });\n    this.resetFields();\n  }\n\n  onCancel = () => {\n    this.resetFields();\n    this.props.onCancel();\n  }\n\n  render() {\n    const { stageName } = this.state;\n    const { showAddStage } = this.props;\n\n    return (\n      <Dialog\n        open={showAddStage}\n        onClose={this.onCancel}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add New Stage</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the name for the new stage.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Stage Name\"\n            type=\"text\"\n            fullWidth\n            value={stageName}\n            onChange={this.handleStageNameChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.onCancel} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={this.onSubmit} color=\"primary\">\n            Add Stage\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nAddStage.propTypes = {\n  showAddStage: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nAddStage.defaultProps = {\n  showAddStage: false,\n  onCancel: () => {},\n  onSubmit: () => {},\n};\n\nexport default AddStage;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Header from './components/Header';\nimport KanbanBoard from './components/KanbanBoard';\nimport initialData from './initialData';\nimport AddProject from './components/AddProject';\nimport AddStage from './components/AddStage';\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst randomNumber = () => Math.floor(Math.random() * 100 + 1)\n\nclass App extends Component {\n  state = {\n    ...initialData,\n    showToast: false,\n    toastMessage: '',\n    addProject: false,\n    addStage: false,\n  }\n\n  updateStage = (stageId, newStage) => {\n    console.log('updating stage --> ', newStage);\n    const { stages } = this.state;\n    const updatedStages = {...stages};\n    updatedStages[stageId] = newStage;\n\n    this.setState({ stages: updatedStages });\n  }\n\n  addNewStage = ({ stageName }) => {\n    if (!stageName) return;\n\n    console.log('add new stage with name --> ', stageName);\n    const newId = randomNumber();\n    const newStageId = `stage-${newId}`;\n    const newStage = {\n      id: newStageId,\n      title: stageName,\n      projectIds: [],\n    };\n\n    const { stages, stageOrder } = this.state;\n    const copyStages = { ...stages };\n    copyStages[newStageId] = newStage;\n    const newStageOrder = [...stageOrder, newStageId];\n    this.setState({ stages: copyStages, stageOrder: newStageOrder });\n\n    this.closeAddStage();\n  }\n\n  addNewProject = ({ projectName, description }) => {\n    console.log('add new project --> ', projectName, description);\n    if (!projectName) return;\n\n    const projectDescription = description || 'No Description';\n\n    const newId = randomNumber();\n    const newProjectId = `project-${newId}`;\n    const newProject = {\n      id: newProjectId,\n      title: projectName,\n      description: projectDescription,\n    };\n\n    // Add the new project into planning stage\n    const { projects, stages } = this.state;\n    const copyProjects = { ...projects };\n    copyProjects[newProjectId] = newProject;\n\n    const planningStage = stages['planning'];\n    const { projectIds: projectsInPlanning } = planningStage;\n    const addedNewProjectId = [...projectsInPlanning, newProjectId];\n    const updatedPlanningStage = {\n      ...planningStage,\n      projectIds: addedNewProjectId,\n    };\n\n    const copyStages = { ...stages };\n    copyStages['planning'] = updatedPlanningStage;\n\n    this.setState({\n      stages: copyStages,\n      projects: copyProjects,\n    });\n\n    this.closeAddProject();\n  }\n\n  openAddProject = () =>  this.setState({ addProject: true })\n\n  closeAddProject = () => this.setState({ addProject: false })\n\n  openAddStage = () => this.setState({ addStage: true })\n\n  closeAddStage = () => this.setState({ addStage: false })\n\n  showToastMessage = (message) => {\n    this.setState({ showToast: true, toastMessage: message });\n  }\n\n  hideToastMessage = () => this.setState({ showToast: false })\n\n  render() {\n    const { projects } = this.state;\n    const noOfProjects = Object.keys(projects).length;\n\n    return (\n      <AppContainer>\n        <Header\n          openAddProject={this.openAddProject}\n          openAddStage={this.openAddStage}\n          noOfProjects={noOfProjects}\n        />\n        <KanbanBoard\n          data={this.state}\n          updateStage={this.updateStage}\n          showToastMessage={this.showToastMessage}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.showToast}\n          autoHideDuration={6000}\n          message={this.state.toastMessage}\n          onClose={this.hideToastMessage}\n        />\n        <AddProject\n          showAddProject={this.state.addProject}\n          onCancel={this.closeAddProject}\n          onSubmit={this.addNewProject}\n        />\n        <AddStage\n          showAddStage={this.state.addStage}\n          onCancel={this.closeAddStage}\n          onSubmit={this.addNewStage}\n        />\n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}